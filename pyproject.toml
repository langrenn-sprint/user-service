[tool.poetry]
authors = ["Stig B. Dørmænen <stigbd@gmail.com>", "Heming Harnæs <heming.harnaes@gmail.com"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
description = "An API for admin of sporting users"
homepage = "https://github.com/langrenn-sprint/user-service"
license = "Apache-2.0"
name = "user-service"
readme = "README.md"
repository = "https://github.com/langrenn-sprint/user-service"
version = "0.1.0"

[tool.poetry.dependencies]
PyJWT = "^2.1.0"
aiodns = "^3.0.0"
aiohttp = "^3.7.2"
aiohttp-middlewares = "^2.1.0"
certifi = "^2023.11.17"
dataclasses-json = "^0.6.3"
gunicorn = "^21.2.0"
motor = "^3.3.2"
multidict = "^6.0.4"
python = ">=3.9,<3.12"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
aiohttp-devtools = "^1.0.post0"
black = "^23.11.0"
codecov = "^2.1.12"
coverage = "^7.2.1"
docker = "^6.0.0"
flake8 = "^6.0.0"
flake8-annotations = "^3.0.0"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^23.2.13"
flake8-docstrings = "^1.6.0"
flake8-import-order = "^0.18.1"
mypy = "^1.7.1"
nox = "^2023.4.22"
nox-poetry = "^1.0.1"
pep8-naming = "^0.13.2"
pytest = "^7.1.3"
pytest-aiohttp = "^1.0.4"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
pytest-docker = "^2.0.1"
pytest-mock = "^3.8.2"
requests = "^2.28.1"
safety = "^2.3.5"

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
  "unit: marks tests as unit",
  "integration: marks tests as integration",
  "contract: marks tests as contract",
]

[tool.coverage.paths]
source = ["user_service", "*/site-packages"]

[tool.coverage.run]
branch = false
omit = ["*gunicorn_config.py"]
source = ["user_service"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "gunicorn.*",
  "requests.*",
  "motor.*",
  "pytest_mock",
  "aioresponses.*",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
