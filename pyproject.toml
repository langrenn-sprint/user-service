[tool.poetry]
authors = ["Stig B. Dørmænen <stigbd@gmail.com>", "Heming Harnæs <heming.harnaes@gmail.com"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
description = "An API for admin of sporting users"
homepage = "https://github.com/langrenn-sprint/user-service"
license = "Apache-2.0"
name = "user-service"
readme = "README.md"
repository = "https://github.com/langrenn-sprint/user-service"
version = "0.1.0"

[tool.poetry.dependencies]
PyJWT = "^2.1.0"
aiodns = "^3.0.0"
aiohttp = "^3.7.2"
aiohttp-middlewares = "^1.1.0"
cchardet = "^2.1.7"
certifi = "^2021.5.30"
dataclasses-json = "^0.5.4"
gunicorn = "^20.0.4"
motor = "^2.4.0"
multidict = "^6.0.2"
python = ">=3.7,<3.10"
python-dotenv = "^0.19.1"

[tool.poetry.dev-dependencies]
aiohttp-devtools = "^1.0.post0"
black = "^22.1.0"
codecov = "^2.1.10"
coverage = "^6.0.2"
docker = "^5.0.0"
docker-compose = "^1.27.4"
flake8 = "^4.0.1"
flake8-annotations = "^2.4.1"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.1"
flake8-bugbear = "^22.1.11"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.2.0"
flake8-import-order = "^0.18.1"
mypy = "^0.931"
nox = "^2022.1.7"
nox-poetry = "^0.9.0"
pep8-naming = "^0.12.1"
pytest = "^6.1.1"
pytest-aiohttp = "^1.0.3"
pytest-asyncio = "^0.17.2"
pytest-cov = "^3.0.0"
pytest-docker = "^0.10.1"
pytest-mock = "^3.3.1"
pytype = "^2022.1.31"
requests = "^2.25.1"
safety = "^1.9.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
  "unit: marks tests as unit",
  "integration: marks tests as integration",
  "contract: marks tests as contract",
]

[tool.coverage.paths]
source = ["user_service", "*/site-packages"]

[tool.coverage.run]
branch = false
omit = ["*gunicorn_config.py"]
source = ["user_service"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "gunicorn.*",
  "requests.*",
  "motor.*",
  "pytest_mock",
  "aioresponses.*",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
